TiledSharp
==========
A .NET C# library for importing Tiled TMX tile maps


About TiledSharp
----------------
TiledSharp is a .NET C# library for importing TMX_ tilemaps and TSX tilesets
generated by Tiled_, a tile map generation tool. The data is saved as a TmxMap_
object, whose structure closely resembles the original TMX file.

As a generic TMX and TSX parser, TiledSharp does not render the maps or depend
on any external framework beyond .NET, such as Windows, XNA/MonoGame, or PSM.
However, it can be used as an interface between TMX data and external games.

For an example of an XNA Map renderer using TiledSharp, see my Tesserae_
project.


Usage
-----
To import a TMX file into your C# application:

- Include a reference to TiledSharp. You can either incorporare it directory
  into your own project, or you can pre-compile it and include the DLL.

- Import the TiledSharp namespace (optional):

  .. code:: csharp

     using TiledSharp;

- Create a Map object using the constructor:

  .. code:: csharp

     var map = new TmxMap("someMap.tmx");

  TiledSharp supports both resource names and file paths, and should work as
  expected in most situations. For more details, please consult the wiki.

- Access the TMX data using the Map fields. Principal classes can be accessed
  by either name or index:

  .. code:: csharp

     var map = new TmxMap("someMap.tmx");
     var version = map.Version;
     var myTileset = map.Tilesets["myTileset"];
     var myLayer = map.Layers[2];
     var hiddenChest = map.ObjectGroups["Chests"].Objects["hiddenChest"];

Map data fields correspond closely to the TMX file structure. For a complete
listing, see the `TiledSharp Data Hierarchy`_.

Although TiledSharp can manage elements with the same name, it is not
recommended. For more information, see the TmxList_ specification.


Tiled 0.9.0 Status Report
-------------------------
To the best of my knowledge, all new 0.9.0 features have been implemented:

* Map: backgroundcolor
* Imagelayer
* Object: visible, rotation, tile flip
* Ellipse
* Tileset: TileOffset
* Tileset: Terraintype, Terrain
* Image: format and data (base64 embedded image) *(untested)*

I am still in the process of testing most of these new features.

The following new T# features have been added or changed:

* TmxList elements now return their type, rather than their interface
* TmxObject.Width and Height are no longer nullable
* Colors are now stored under a platform-neutral TmxColor class

The following new T# features may need to be added or redesigned:

* Fix the TmxList name collision problems
* cleaner ToString field output
* Develop test cases and automated testing


Notes
-----
TiledSharp parses XML files produced by Tiled_, an open-source (GPL) tile map
editor developed and maintained by Thorbj√∏rn Lindeijer.

Zlib decompression in TiledSharp uses the Zlib implementation of DotNetZip_
v1.9.1.8.


Licensing
---------
TiledSharp_ is distributed under the `Apache 2.0 License`_.

Support code from DotNetZip_ is distributed under the `Microsoft Public
License`_.


Contact
-------
Marshall Ward <tiledsharp@marshallward.org>

.. _TMX: https://github.com/bjorn/tiled/wiki/TMX-Map-Format
.. _Tiled: http://mapeditor.org
.. _Tesserae: https://github.com/marshallward/Tesserae
.. _TmxMap: https://github.com/marshallward/TiledSharp/wiki/TmxMap
.. _TiledSharp: https://github.com/marshallward/TiledSharp
.. _TiledSharp Data Hierarchy:
    https://github.com/marshallward/TiledSharp/wiki/TiledSharp-Data-Hierarchy
.. _TmxList: https://github.com/marshallward/TiledSharp/wiki/TmxList
.. _DotNetZip: http://dotnetzip.codeplex.com
.. _Apache 2.0 License:
    http://www.apache.org/licenses/LICENSE-2.0.txt
.. _Microsoft Public License:
    http://www.microsoft.com/en-us/openness/licenses.aspx#MPL
